<style>
    body.pink-background {
        background-color: pink;
    }
    body.orange-background {
        background-color: rgb(233, 196, 128);
    }
    body.green-background {
        background-color: rgb(165, 241, 165);
    }
    aside.pink-background {
        background-color: rgb(228, 109, 149);
    }
    aside.orange-background {
        background-color: rgb(247, 183, 66);
    }
    aside.green-background {
        background-color: rgb(104, 236, 104);
    }
    aside.standart-background {
        background-color: #f5f5f5; 
    }
    .star-container {
        position: relative;
        background-color: #eee;
        padding-top: 40px; /* creates space at the top for the stars */
        margin-bottom: 20px;
    }

    .star-strip {
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 4px;
        padding: 8px 0;
    }

    .star-strip i {
        color: gold;
        font-size: 1.5em;
        filter: drop-shadow(0 0 1px #000);
    }

    .other-content {
        text-align: center;
    }
</style>

@using System.Text.Json
@{
    ViewData["Title"] = "WIKI Pařez";
    var random = new Random();
    bool isPink = random.NextDouble() < 0.2 && @ViewBag.Slug == "mi_ordinace_pink_lady";
    bool isGreen = random.NextDouble() < 0.2 && @ViewBag.Slug == "mi_vert_ville";
    bool isOrange = random.NextDouble() < 0.2 && @ViewBag.Slug == "mi_oranjestad";
    double rating = 0;
    int full = 0;
    bool half = false;
    int empty = 5;
    if (Model.review_count() > 0){
        rating = Model.reviews[0].stars;
        full = (int)rating;
        half = (rating - full) >= 0.5;
        empty = 5 - full - (half ? 1 : 0);
    }
}

<style>
    .zoomed {
        transform: scale(2);
        cursor: zoom-out;
        z-index: 1000;
        position: relative;
    }

    .zoomedbottomright {
        transform: scale(2);
        cursor: zoom-out;
        transform-origin: bottom right;
        z-index: 1000;
        position: relative;
    }

    img.wikiimage {
        transition: transform 0.3s ease;
        cursor: zoom-in;
    }
</style>


@if (Model != null){
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Pařez Wiki</title>
</head>
<body class="@(isPink ? "pink-background" : isGreen ? "green-background" : isOrange ? "orange-background" : "")">
    <div class="text-center">
        <h1 class="display-4">Vítej na Pařez Wiki</h1>
        <p>Stránka o @Model.Type @Model.Title.</p>
        @if (Model.tobeedited){
            <p style="color: rgb(155, 63, 63); font-size: x-large;"><b>!!! TATO STRÁNKA MŮŽE OBSAHOVAT NEPLATNÉ NEBO ZASTARALÉ INFO !!!</b></p>
        }
    </div>

    @if (ViewBag.Slug == "mi_villager_house" && random.NextDouble() < 0.30){
        <div style="position: fixed; bottom: 0; right: 0; z-index: 2000;">
            <img id="eastereggimage" onclick="this.classList.toggle('zoomedbottomright')" style="width: 100%; max-width: 100%;" src="/Images/villagereasteregg.png" alt="image"/>
        </div>
    }

    @if (ViewBag.Slug == "mi_lazne_panoraama" && random.NextDouble() < 0){
        <div style="position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; object-fit: contain; z-index: -2000">
            <img id="eastereggimage" style="width: 100%; max-width: 100%;" src="/Images/turtleeasteregg.png" alt="image"/>
        </div>
    }

    <div style="display: flex; gap: 2rem;">
        <main style="flex-grow: 1;">
            @foreach (var sec in Model.Sections)
            {
                <div class="section">
                    <h2>@sec.Title</h2>
                    <p style="word-break: break-word; overflow-wrap: break-word; white-space: pre-wrap;">@Html.Raw(sec.Content)</p>
                </div>
            }
        </main>
        <aside class="@(isPink ? "pink-background" : isGreen ? "green-background" : isOrange ? "orange-background" : "standart-background")" style="min-width: 200px; padding: 1rem; border-radius: 8px; max-width: 300px;">
            <figure style="margin: 0; text-align: center; position: relative;">
                <img id="wikiimage" onclick="this.classList.toggle('zoomed')" style="width: 100%; max-width: 100%;" src="/Images/@Model.Images[Model.image_id]" alt="image"/>
                <figcaption id="imagetitle" style="margin-top: 0.5rem; font-weight:bold;">@Html.Raw(@Model.Image_titles[Model.image_id])</figcaption>
                @if (Model.image_count() > 1)
                {
                    <button onclick="changeImage(-1)" class="btn btn-sm" style="background-color: white; position: absolute; top: 50%; left: 10px; transform: translateY(-50%);">‹</button>
                }
                @if (Model.image_count() > 1)
                {
                    <button onclick="changeImage(1)" class="btn btn-sm" style="background-color: white; position: absolute; top: 50%; right: 10px; transform: translateY(-50%);">›</button>
                }
            </figure>
            <h2 style="text-align: center;">Info</h2>
            <table>
                @if (Model.utilities.Count > 0){
                    <div style="display: flex; flex-wrap: wrap; justify-content: center; gap: 10px; padding-bottom: 25px; padding-top: 25px; background-color: rgb(188, 212, 197);">
                        @foreach (string item in Model.utilities)
                        {
                            <div style="flex: 0 0 20%; text-align: center;">
                                <img src="/Images/Icons/@(item).png" style="max-width: 100px;" />
                            </div>
                        }
                    </div>
                }
                @foreach (var key in Model.Metadata.Keys)
                {
                    <tr>
                        <td style="padding-right: 0.5rem;"><strong>@key:</strong></td>
                        <td>@Html.Raw(Model.Metadata[key])</td>
                    </tr>
                }
                @if (Model.area > 0){
                    <tr>
                        <td style="padding-right: 0.5rem;"><strong>Plocha:</strong></td>
                        <td>@Model.area blok²</td>
                    </tr>
                }
                @if (Model.numberOfRooms > 0){
                    <tr>
                        <td style="padding-right: 0.5rem;"><strong>Počet místností:</strong></td>
                        <td>@Model.numberOfRooms</td>
                    </tr>
                }
                @if (Model.review_count() > 0){
                    <div class="star-container">
                        <div id="starstrip" class="star-strip">
                            @for (int i = 0; i < full; i++) {
                                <i class="fa-solid fa-star"></i>
                            }
                            @if (half) {
                                <i class="fa-solid fa-star-half-stroke"></i>
                            }
                            @for (int i = 0; i < empty; i++) {
                                <i class="fa-regular fa-star"></i>
                            }
                        </div>

                        <div class="other-content">
                            <p id="review"><b>@Model.reviews[0].author</b><br/>@Model.reviews[0].text</p>
                        </div>
                        @if (Model.review_count() > 1){
                            <div style="display: flex; flex-orientation: row; justify-content: center; align-items: center; font-size: 2em;">
                                <button onclick="changeReview(-1)" style="border: none; background: none;">⬅️</button>
                                <button onclick="changeAutoplay()" id="pause" style="border: none; background: none;">⏸️</button>
                                <button onclick="changeReview(1)" style="border: none; background: none;">➡️</button>
                            </div>
                        }
                    </div>
                }
            </table>
            @using (Html.BeginForm("SendEmail", "Wiki", FormMethod.Post))
            {
                <input type="hidden" name="slug" value=@ViewBag.Slug />
                <input type="text" name="message" placeholder="Popiš chybu" />
                <button type="submit">Odeslat</button>
            }
        </aside>
    </div>
</body>
</html>

    @section Scripts {
        <script>
            var slug = "@ViewBag.Slug";
            let reviewinterval;
            document.addEventListener("DOMContentLoaded", function() {
                console.log("hi");
                let rn = Math.random();
                if (rn < 0.2 && slug == "mi_dum_margity_stehlikove"){
                    window.location.href = "https://www.youtube.com/watch?v=NdqHolSeIfs";
                }
                reviewinterval = setInterval(() => changeReview(1, false), 2500);
            });

            const imageCount = @Model.image_count();
            const reviewCount = @Model.review_count();
            let reviews = @Html.Raw(Json.Serialize(Model.reviews));
            let currentImageID = @Model.image_id;
            let currentReviewID = 0;
            let reviewAutoPlay = true;
            function changeImage(direction){
                currentImageID = (currentImageID + direction + imageCount)%imageCount;
                document.getElementById("wikiimage").src = "/Images/" + images[currentImageID];
                document.getElementById("imagetitle").innerHTML = titles[currentImageID];
            }

            const images = @Html.Raw(JsonSerializer.Serialize(Model.Images));
            const titles = @Html.Raw(JsonSerializer.Serialize(Model.Image_titles));

            function changeAutoplay(){
                if (reviewAutoPlay) stopAutoplay();
                else startAutoplay();
            }

            function stopAutoplay(){
                let pausebutton = document.getElementById("pause");
                pausebutton.innerText = "▶️"
                reviewAutoPlay = false;
                clearInterval(reviewinterval);
            }

            function startAutoplay(){
                let pausebutton = document.getElementById("pause");
                pausebutton.innerText = "⏸️"
                reviewAutoPlay = true;
                reviewinterval = setInterval(() => changeReview(1, false), 2500);
            }

            function changeReview(direction, stopautoplay=true){
                if (reviewCount <= 1) return;
                if (stopautoplay) stopAutoplay();
                currentReviewID = (currentReviewID + direction + reviewCount)%reviewCount;
                let review = reviews[currentReviewID];
                let rating = review.stars;
                let full = Math.floor(rating);
                let half = (rating - full) >= 0.5;
                let empty = 5 - full - (half ? 1 : 0);
                let starstrip = document.getElementById("starstrip");
                starstrip.innerHTML = "";
                for(let i = 0; i < full; i++){
                    let star = document.createElement("i");
                    star.classList.add("fa-solid", "fa-star");
                    starstrip.appendChild(star);
                }
                if(half){
                    let halfstar = document.createElement("i");
                    halfstar.classList.add("fa-solid", "fa-star-half-stroke");
                    starstrip.appendChild(halfstar);
                }
                for(let i = 0; i < empty; i++){
                    let emptystar = document.createElement("i");
                    emptystar.classList.add("fa-regular", "fa-star")
                    starstrip.appendChild(emptystar);
                }
                document.getElementById("review").innerHTML = "<b>" + review.author + "</b><br>" + review.text;
            }
        </script>
    }
}